>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()
>>> bg.area()
Traceback (most recent call last):
...
Exception: area() is not implemented
>>> bg.integer_validator("my_int", 12)
>>> bg.integer_validator("width", 89)
>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
...
TypeError: name must be an integer
>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
...
ValueError: age must be greater than 0
>>> bg.integer_validator("distance", -4)
Traceback (most recent call last):
...
ValueError: distance must be greater than 0
>>> bg.integer_validator(12, 12)

>>> bg.integer_validator("three inputs", 12, 15)
Traceback (most recent call last):
...
TypeError: integer_validator() takes 3 positional arguments but 4 were given
>>> bg.integer_validator(, 12)
Traceback (most recent call last):
...
SyntaxError: invalid syntax
>>> bg.integer_validator("ageless")
Traceback (most recent call last):
...
TypeError: integer_validator() missing 1 required positional argument: 'value'
>>> bg.integer_validator()
Traceback (most recent call last):
...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
>>> bg.integer_validator("list", [12])
Traceback (most recent call last):
...
TypeError: list must be an integer
>>> bg.integer_validator("tuple", (12,))
Traceback (most recent call last):
...
TypeError: tuple must be an integer
>>> bg.integer_validator("curly", {12})
Traceback (most recent call last):
...
TypeError: curly must be an integer
>>> bg.integer_validator("It's a no ney never", None)
Traceback (most recent call last):
...
TypeError: It's a no ney never must be an integer

>>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul
>>> lazy_matrix_mul([[1, -2, 0.5], [7.25, 40, -20]], [[1, -2.7], [(3 + 4.5), 4], [5, -5748573856]])
array([[-1.15000000e+01, -2.87428694e+09],
       [ 2.07250000e+02,  1.14971477e+11]])
>>> lazy_matrix_mul("The Matrix", [[1, 2], [3, 4]])
Traceback (most recent call last):
...
TypeError: m_a must be a list
>>> lazy_matrix_mul([[1, 2], [3, 4]], "The Matrix Reloaded")
Traceback (most recent call last):
...
TypeError: m_b must be a list
>>> lazy_matrix_mul([[1, 2], [3, 4, 5]], [[1, 2], [3, 4]])
Traceback (most recent call last):
...
TypeError: each row of m_a must be of the same size
>>> lazy_matrix_mul([[1, 2], [3, 4]])
Traceback (most recent call last):
...
TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b'
>>> lazy_matrix_mul()
Traceback (most recent call last):
...
TypeError: lazy_matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'
>>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, "Neo, come back to the matrix"]])
Traceback (most recent call last):
...
TypeError: m_b should contain only integers or floats
>>> lazy_matrix_mul([[1, 2], "There's no spoon"], [[1, 2], [3, 4]])
Traceback (most recent call last):
...
TypeError: m_a should contain only integers or floats
>>> lazy_matrix_mul([[1, 2, 3], [4, 5, 6]], [[1, 2, 3], [3, 4, 5]])
Traceback (most recent call last):
...
ValueError: m_a and m_b can't be multiplied
>>> lazy_matrix_mul([[1, 2], [3, 4]], [[]])
Traceback (most recent call last):
...
ValueError: m_b can't be empty
>>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]], [[1, 2], [3, 4]])
Traceback (most recent call last):
...
TypeError: lazy_matrix_mul() takes 2 positional arguments but 3 were given
